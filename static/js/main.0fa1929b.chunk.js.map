{"version":3,"sources":["p2-homeworks/h5/pages/Heade.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/pages/Error.module.css","p2-homeworks/h5/HW5.module.css","p2-homeworks/h5/Menu-Hamburger/index.js","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Junior.tsx","p2-homeworks/h5/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ExampleCss","props","wrapperRef","React","createRef","this","current","classList","toggle","ref","className","type","onClick","handleClick","to","href","activeClassName","s","active","Jun","Component","Header","Error404","err","Message","src","avatar","name","message","time","messageData","HW1","Affair","affair","deleteAffairCallback","_id","priority","Affairs","mappedAffairs","data","map","a","key","filter","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","f","filterAffairs","d","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","setError","inputClass","setName","value","onKeyPress","e","charCode","onChange","counter","errorMessage","GreetingContainer","users","addUserCallback","length","currentTarget","trim","alert","HW3","setUsers","SuperInputText","onChangeText","onEnter","inputClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","spanClassName","checkbox","checked","HW4","text","setText","showAlert","setChecked","console","log","column","blue","buttonDefault","buttonDelete","disabled","buttonDisabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","x","y","defaultState","getItem","parse","restoreState","HW6","setValue","undefined","PreJunior","Junior","JuniorPlus","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0fa1929b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Jun\":\"Heade_Jun__2xl_D\",\"active\":\"Heade_active__33CFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__303pu\",\"column\":\"HW4_column__6fmYo\",\"inputClass\":\"HW4_inputClass__1UxuU\",\"buttonDefault\":\"HW4_buttonDefault__BWf19\",\"buttonDelete\":\"HW4_buttonDelete__3phJ_\",\"buttonDisabled\":\"HW4_buttonDisabled__1XYiG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2YT5P\",\"error\":\"Greeting_error__3SuGY\",\"counter\":\"Greeting_counter__NsN_I\",\"errorMessage\":\"Greeting_errorMessage__3h4B5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__qkXyS\",\"inputOK\":\"SuperInputText_inputOK__3SSjF\",\"errorInput\":\"SuperInputText_errorInput__IccNK\",\"error\":\"SuperInputText_error__y68yl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1CuPJ\",\"red\":\"SuperButton_red__88CJD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1wPOU\",\"spanClassName\":\"SuperCheckbox_spanClassName__22o_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__Vh-SR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"err\":\"Error_err__3euej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HW5\":\"HW5_HW5__C3Gps\"};","import React, { Component } from 'react';\nimport './style_hamburger.css';\nimport {NavLink} from \"react-router-dom\";\nimport s from \"../pages/Heade.module.css\";\n\nexport default class ExampleCss extends Component {\n  constructor(props) {\n    super(props);\n    this.wrapperRef = React.createRef();\n  }\n\n  handleClick() {\n    const wrapper = this.wrapperRef.current;\n    wrapper.classList.toggle('is-nav-open')\n  }\n\n  render() {\n    return (\n      <div ref={this.wrapperRef} className=\"wrapper\" >\n        <div className=\"nav\">\n          <button className=\"nav__icon\" type=\"menu-fold\" onClick={() => this.handleClick()} />\n          <div className=\"nav__body\">\n            <NavLink to={'/pre-junior'} href={'/pre-junior'} activeClassName={s.active} className={s.Jun}><b>Pre Junior</b> </NavLink>\n            <NavLink to={'/junior'} href={'/junior'} activeClassName={s.active} className={s.Jun}><b>Junior</b> </NavLink>\n            <NavLink to={'/junior-plus'} href={'/junior-plus'}  activeClassName={s.active} className={s.Jun }><b>Junior Plus</b> </NavLink>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport ExampleCss from './Menu-Hamburger'\nimport s from './pages/Heade.module.css'\n\nfunction Header() {\n    return (\n        <div className={s.Header} >\n            <ExampleCss/>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport s from './Error.module.css'\n\n\n\n\n\nfunction Error404() {\n    return (\n        <div>\n            <div className={s.err} >404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React,{MouseEvent} from 'react'\nimport './Message.css'\n\ntype messageData = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: messageData) {\n\n    return (\n        <div className='head-div' >\n            <img src={props.avatar} className=\"img-avatar\"/>\n            <div className='div-test'>\n                <h5 className='name'>{props.name}</h5>\n                    <span className='message' >{props.message}</span>\n                    <span className='time' >{props.time}</span>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from './Message'\n\n const messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some ',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n            {/*should work (должно работать)*/}\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\r\nimport { AffairType } from './HW2';\r\nimport './Affairs.css';\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\r\n\r\n    return (\r\n        <div >\r\n            <span className={'names'}>{props.affair.name}</span>\r\n            <button onClick={deleteCallback}>X</button>\r\n            <span className={'prioritet'}> {props.affair.priority}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport './Affairs.css';\r\nimport { AffairPriorityType, AffairType, FilterType } from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[]\r\n    setFilter: (filter:FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: any) => (\r\n        <Affair  // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button className={ props.filter === 'all' ? 'is-active' : ''} onClick={setAll}>All</button>\r\n            <button className={ props.filter === 'high' ? 'is-active' : ''}onClick={setHigh}>High</button>\r\n            <button className={ props.filter === 'middle' ? 'is-active' : ''}onClick={setMiddle}>Middle</button>\r\n            <button className={ props.filter === 'low' ? 'is-active' : ''}onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\nimport './Affairs.css';\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\r\nexport type AffairType = {\r\n    _id:number\r\n    name:string\r\n    priority:AffairPriorityType\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    if(filter === 'high') return affairs.filter((f)=> f.priority === 'high')\r\n    if(filter === 'low') return affairs.filter((f)=> f.priority === 'low')\r\n    if(filter === 'middle') return affairs.filter((f)=> f.priority === 'middle')\r\n    else return affairs\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\r\n   return affairs.filter((d) => d._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div className={'hw'}>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, { ChangeEvent, ChangeEventHandler } from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e:ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: ()=> void // need to fix any\r\n    error: string | null// need to fix any\r\n    totalUsers: number // need to fix any\r\n    setError:(error:string | null) => void\r\n    setName: (name:string) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers,setError,setName} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : '' // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onKeyPress={(e) => {\r\n                    setError('')\r\n                    if (e.charCode === 13){\r\n                        addUser()\r\n                    }\r\n            }} onChange={setNameCallback} className={inputClass}/>\r\n            <button onClick={addUser}>add</button>\r\n            <span className={s.counter}>{totalUsers}</span>\r\n             <div className={s.errorMessage}>{error}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, { ChangeEvent, useState } from 'react'\r\nimport Greeting from './Greeting'\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: any    // need to fix any\r\n    addUserCallback: (name:string) => void// need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string | null>(null) // need to fix any\r\n\r\n    const setNameCallback = (e:ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value) // need to fix\r\n    }\r\n    const addUser = () => {\r\n       if (name.trim() !== ''){\r\n           alert(`Hello  ! + ${name}`)\r\n           addUserCallback(users)// need to fix\r\n           setName('')\r\n       } else {\r\n         setError('error')\r\n       }\r\n    }\r\n\r\n    const totalUsers =  users.length   // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            setError={setError}\r\n            setName={setName}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\n\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        let task = {_id:'v1()', name:name}\r\n        setUsers([task, ...users]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    inputClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, inputClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${'' ? '' : ''}`\r\n    const finalInputClassName = ` ${className} ${error  ?  s.errorInput : inputClassName} ` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (onChangeChecked) {\r\n            onChangeChecked(e.currentTarget.checked)\r\n        }\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error text input'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    console.log(checked)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    inputClassName={s.inputClass}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton className={s.buttonDefault} >\r\n\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                    className={s.buttonDelete}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled className={s.buttonDisabled} >\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/* этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        // setEditMode() // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        // setEditMode() // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        // setValue()\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from '../../h6/HW6'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react';\r\n\r\nexport function Junior() {\r\n    return <div>Jun</div>\r\n}","import React from 'react'\r\n\r\n\r\n\r\n\r\nexport function JuniorPlus() {\r\nreturn <div>Junior+</div>\r\n}","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport Error404 from './pages/Error404'\nimport PreJunior from './pages/PreJunior'\nimport { Junior } from './Junior';\nimport { JuniorPlus } from './JuniorPlus';\nimport * as path from 'path';\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus',\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport { HashRouter } from 'react-router-dom'\nimport Header from './Header'\nimport Routes from './Routes'\nimport s from './HW5.module.css'\n\nfunction HW5() {\n    return (\n        <div className={s.HW5} >\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2';\nimport HW3 from '../../../p2-homeworks/h3/HW3';\nimport HW4 from '../../../p2-homeworks/h4/HW4';\nimport HW5 from '../../../p2-homeworks/h5/HW5';\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n       {/*     <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}